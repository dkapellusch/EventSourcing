version: "3"
services:
  DDZookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
    restart: always
    networks:
      - "es-net"

  DDKafka:
    image: "confluentinc/cp-kafka:latest"
    ports:
      - "39092:39092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "DDZookeeper:32181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://DDKafka:39093,PLAINTEXT_HOST://localhost:39092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
    restart: always
    depends_on:
      - "DDZookeeper"
    networks:
      - "es-net"

  DDKafka2:
    image: "confluentinc/cp-kafka:latest"
    ports:
      - "49092:49092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "DDZookeeper:32181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://DDKafka2:39093,PLAINTEXT_HOST://localhost:49092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 2
    restart: always
    depends_on:
      - "DDZookeeper"
    networks:
      - "es-net"

  KSQL:
    image: "confluentinc/ksqldb-server:latest"
    ports:
      - "8088:8088"
      - "8089:8089"
    environment:
      KSQL_BOOTSTRAP_SERVERS: "DDKafka:39093"
      KSQL_LISTENERS: "http://0.0.0.0:8088/,https://0.0.0.0:8089/"
      KSQL_OPTS: "-Dksql.service.id=ksql_service_3_  -Dlisteners=http://0.0.0.0:8088/"
    restart: always
    depends_on:
      - "DDKafka"
    networks:
      - "es-net"

  Redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command:
      - /usr/local/etc/redis/redis.conf
    networks:
      - "es-net"

  LocationReadService:
    image: "dkapellusch/eventsourcing.locationreadservice"
    ports:
      - "6001:6001"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "es-net"

  LocationWriteService:
    image: "dkapellusch/eventsourcing.locationwriteservice"
    ports:
      - "6000:6000"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "es-net"

  VehicleReadService:
    image: "dkapellusch/eventsourcing.vehiclereadservice"
    ports:
      - "5001:5001"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "es-net"

  VehicleWriteService:
    image: "dkapellusch/eventsourcing.vehiclewriteservice"
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "es-net"

  LockReadService:
    image: "dkapellusch/eventsourcing.lockreadservice"
    ports:
      - "7001:7001"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
      - "Redis"
    networks:
      - "es-net"

  LockWriteService:
    image: "dkapellusch/eventsourcing.lockwriteservice"
    ports:
      - "7000:7000"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
      - "Redis"
    networks:
      - "es-net"

  Graphql:
    image: "dkapellusch/eventsourcing.graphql"
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "LocationReadService"
      - "LocationWriteService"
      - "VehicleReadService"
      - "VehicleWriteService"
      - "LockReadService"
      - "LockWriteService"
    networks:
      - "es-net"

  ksql-cli:
    image: confluentinc/ksqldb-cli:latest
    depends_on:
      - KSQL
    entrypoint: /bin/sh
    tty: true
    networks:
      - "es-net"

  kafka-manager:
    image: kafkamanager/kafka-manager:latest
    ports:
      - "39000:9000"
    environment:
      ZK_HOSTS: "DDZookeeper:32181"
      APPLICATION_SECRET: "letmein"
    depends_on:
      - DDZookeeper
      - DDKafka
    networks:
      - "es-net"

networks:
  es-net:
