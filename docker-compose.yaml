version: '3'
services:
  DDZookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    ports:
      - "32181:32181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
    restart: always
    networks:
      - "dd-net"

  DDKafka:
    image: "confluentinc/cp-kafka:latest"
    ports:
      - "39092:39092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "DDZookeeper:32181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://DDKafka:39093,PLAINTEXT_HOST://localhost:39092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
    restart: always
    depends_on:
      - "DDZookeeper"
    networks:
      - "dd-net"

  KSQL:
    image: "confluentinc/ksqldb-server:latest"
    ports:
      - "8088:8088"
      - "8089:8089"
    environment:
      KSQL_BOOTSTRAP_SERVERS: "DDKafka:39093"
      KSQL_LISTENERS: "http://0.0.0.0:8088/,https://0.0.0.0:8089/"
      KSQL_OPTS: "-Dksql.service.id=ksql_service_3_  -Dlisteners=http://0.0.0.0:8088/"
    restart: always
    depends_on:
      - "DDKafka"
    networks:
      - "dd-net"

  DDKafka2:
    image: "confluentinc/cp-kafka:latest"
    ports:
      - "49092:49092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "DDZookeeper:32181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://DDKafka2:39093,PLAINTEXT_HOST://localhost:49092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 2
    restart: always
    depends_on:
      - "DDZookeeper"
    networks:
      - "dd-net"

  LocationReadService:
    image: "dkapellusch/eventsourcing.locationreadservice"
    ports:
      - "6001:6001"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "dd-net" 

  LocationWriteService:
    image: "dkapellusch/eventsourcing.locationwriteservice"
    ports:
      - "6000:6000"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "dd-net" 

  VehicleReadService:
    image: "dkapellusch/eventsourcing.vehiclereadservice"
    ports:
      - "5001:5001"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "dd-net" 

  VehicleWriteService:
    image: "dkapellusch/eventsourcing.vehiclewriteservice"
    ports:
      - "5000:5000"
    restart: always
    depends_on:
      - "DDZookeeper"
      - "DDKafka"
      - "DDKafka2"
    networks:
      - "dd-net" 
  
  Graphql:
    image: "dkapellusch/eventsourcing.graphql"
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "LocationReadService"
      - "LocationWriteService"
      - "VehicleReadService"
      - "VehicleWriteService"
    networks:
      - "dd-net"
networks:
  dd-net: